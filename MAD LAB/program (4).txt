xml code

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <TextView
        android:id="@+id/textView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Reg No"
        app:layout_constraintBottom_toTopOf="@+id/editText"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintHorizontal_bias="0.05" />

    <EditText
        android:id="@+id/editText"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:ems="10"
        android:inputType="text"
        app:layout_constraintTop_toBottomOf="@id/textView"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <TextView
        android:id="@+id/textView2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Name"
        app:layout_constraintTop_toBottomOf="@id/editText"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintHorizontal_bias="0.05" />

    <EditText
        android:id="@+id/editText2"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:ems="10"
        android:inputType="text"
        app:layout_constraintTop_toBottomOf="@id/textView2"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <TextView
        android:id="@+id/textView3"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Marks"
        app:layout_constraintTop_toBottomOf="@id/editText2"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintHorizontal_bias="0.05" />

    <EditText
        android:id="@+id/editText3"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:ems="10"
        android:inputType="number"
        app:layout_constraintTop_toBottomOf="@id/textView3"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <Button
        android:id="@+id/button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="ADD"
        app:layout_constraintTop_toBottomOf="@id/editText3"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintHorizontal_bias="0.3" />

    <Button
        android:id="@+id/button2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="VIEW"
        app:layout_constraintTop_toBottomOf="@id/editText3"
        app:layout_constraintStart_toEndOf="@id/button"
        app:layout_constraintHorizontal_bias="0.5" />

    <Button
        android:id="@+id/button3"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="VIEW ALL"
        app:layout_constraintTop_toBottomOf="@id/button"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintHorizontal_bias="0.3" />

    <Button
        android:id="@+id/button4"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="DELETE"
        app:layout_constraintTop_toBottomOf="@id/button2"
        app:layout_constraintStart_toEndOf="@id/button3"
        app:layout_constraintHorizontal_bias="0.7" />

    <Button
        android:id="@+id/button5"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="UPDATE"
        app:layout_constraintTop_toBottomOf="@id/button3"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.5" />
</androidx.constraintlayout.widget.ConstraintLayout>



java code

package com.mad.labprogram4dbapplication;

import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;

public class MainActivity extends AppCompatActivity {
    EditText reg, name, marks;
    Button addb, vb, vab, delb, ub;
    SQLiteDatabase db;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        reg = findViewById(R.id.editText);
        name = findViewById(R.id.editText2);
        marks = findViewById(R.id.editText3);
        addb = findViewById(R.id.button);
        vb = findViewById(R.id.button2);
        vab = findViewById(R.id.button3);
        delb = findViewById(R.id.button4);
        ub = findViewById(R.id.button5);

        db = openOrCreateDatabase("Student", Context.MODE_PRIVATE, null);
        db.execSQL("CREATE TABLE IF NOT EXISTS student(RegNo VARCHAR, Name VARCHAR, Mark VARCHAR);");

        addb.setOnClickListener(v -> {
            if (reg.getText().toString().trim().isEmpty() ||
                    name.getText().toString().trim().isEmpty() ||
                    marks.getText().toString().trim().isEmpty()) {
                showMessage("Error", "Please enter all values");
                return;
            }
            db.execSQL("INSERT INTO student VALUES('" + reg.getText() + "','" + name.getText() + "','" + marks.getText() + "');");
            showMessage("Success", "Record added");
            clearText();
        });

        delb.setOnClickListener(v -> {
            if (reg.getText().toString().trim().isEmpty()) {
                showMessage("Error", "Please enter Reg. No.");
                return;
            }
            Cursor c = db.rawQuery("SELECT * FROM student WHERE RegNo='" + reg.getText() + "'", null);
            if (c.moveToFirst()) {
                db.execSQL("DELETE FROM student WHERE RegNo='" + reg.getText() + "'");
                showMessage("Success", "Record Deleted");
            } else {
                showMessage("Error", "Invalid Reg. No.");
            }
            c.close();
            clearText();
        });

        ub.setOnClickListener(v -> {
            if (reg.getText().toString().trim().isEmpty()) {
                showMessage("Error", "Please enter Reg. No.");
                return;
            }
            Cursor c = db.rawQuery("SELECT * FROM student WHERE RegNo='" + reg.getText() + "'", null);
            if (c.moveToFirst()) {
                db.execSQL("UPDATE student SET Name='" + name.getText() + "', Mark='" + marks.getText() + "' WHERE RegNo='" + reg.getText() + "'");
                showMessage("Success", "Record Modified");
            } else {
                showMessage("Error", "Invalid Reg. No.");
            }
            c.close();
            clearText();
        });

        vb.setOnClickListener(v -> {
            if (reg.getText().toString().trim().isEmpty()) {
                showMessage("Error", "Please enter Reg. No.");
                return;
            }
            Cursor c = db.rawQuery("SELECT * FROM student WHERE RegNo='" + reg.getText() + "'", null);
            if (c.moveToFirst()) {
                name.setText(c.getString(1));
                marks.setText(c.getString(2));
            } else {
                showMessage("Error", "Invalid Reg. No.");
                clearText();
            }
            c.close();
        });

        vab.setOnClickListener(v -> {
            Cursor c = db.rawQuery("SELECT * FROM student", null);
            if (c.getCount() == 0) {
                showMessage("Error", "No records found");
                return;
            }
            StringBuilder buffer = new StringBuilder();
            while (c.moveToNext()) {
                buffer.append("Reg. No: ").append(c.getString(0)).append("\n");
                buffer.append("Name: ").append(c.getString(1)).append("\n");
                buffer.append("Mark: ").append(c.getString(2)).append("\n\n");
            }
            showMessage("Student Details", buffer.toString());
            c.close();
        });
    }

    public void showMessage(String title, String message) {
        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        builder.setCancelable(true);
        builder.setTitle

